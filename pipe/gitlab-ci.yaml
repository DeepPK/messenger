stages:
  - build
  - test
  - sonar-check
  - quality-check

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

cache:
  key: maven
  paths:
    - .m2/repository

sonarcloud-check:
  image: maven:3-openjdk-17
  stage: sonar-check
  tags:
    - messenger
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify sonar:sonar -Dsonar.projectKey=DeepPK_messenger
    - sonar-scanner
    - Dsonar.projectKey=DeepPK_messenger
    - Dsonar.host.url=$SONAR_HOST_URL
    - Dsonar.login=$SONAR_TOKEN
    - Dsonar.coverageReportPaths=path/to/coverage/report.xml
  only:
    - merge_requests
    - master
    - develop
  artifacts:
    paths:
      - coverage.xml

check-metrics:
  image: maven:3-openjdk-17
  stage: quality-check
  script:
    - apt-get update && apt-get install -y jq
    - |
      # Получаем ID последнего анализа
      ANALYSIS_ID=$(curl -s -u $SONAR_TOKEN: "$SONAR_HOST_URL/api/project_analyses/search?project=my_project" | jq -r '.analyses[0].key')
      
      COVERAGE=$(curl -s -u $SONAR_TOKEN: "$SONAR_HOST_URL/api/measures/component?component=my_project&metricKeys=coverage" | jq -r '.component.measures[0].value')
      echo "Покрытие кода: $COVERAGE%"
      if [ $(echo "$COVERAGE < 80" | bc) -eq 1 ]; then
        echo "Ошибка: Покрытие кода меньше 80%"
        exit 1
      fi

      TEST_SUCCESS=$(curl -s -u $SONAR_TOKEN: "$SONAR_HOST_URL/api/measures/component?component=my_project&metricKeys=test_success_density" | jq -r '.component.measures[0].value')
      echo "Тесты пройдены на: $TEST_SUCCESS%"
      if [ $(echo "$TEST_SUCCESS < 100" | bc) -eq 1 ]; then
        echo "Ошибка: Тесты провалены"
        exit 1
      fi

      CRITICAL_ISSUES=$(curl -s -u $SONAR_TOKEN: "$SONAR_HOST_URL/api/issues/search?componentKeys=my_project&severities=CRITICAL" | jq -r '.total')
      if [ "$CRITICAL_ISSUES" -gt 0 ]; then
        echo "Ошибка: Найдено $CRITICAL_ISSUES критических проблем"
        exit 1
      fi

build:
  image: maven:3.8.6-openjdk-18
  stage: build
  tags:
    - messenger
  script:
    - mvn $MAVEN_CLI_OPTS clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 day

test:
  image: maven:3.8.6-openjdk-18
  stage: test
  tags:
    - messenger
  script:
    - mvn $MAVEN_CLI_OPTS test
    - coverage run -m pytest tests/
    - coverage xml  
  artifacts:
    reports:
      junit: target/surefire-reports/*.xml
