version: '3.8'

services:
  messenger_back:
    container_name: backend
    build:
      context: messenger-frontend
      dockerfile: Dockerfile.back
    networks:
      - messenger-network
    ports:
      - "8080:8080"
    environment:
      spring.datasource.url: "jdbc:postgresql://messenger-db:5432/messenger_db"
      spring.datasource.username: "postgres"
      spring.datasource.password: "postgres"

  app:
    container_name: frontend
    build:
      context: messenger-frontend
      dockerfile: Dockerfile.front
    ports:
      - "3000:80"
    volumes:
      - .:/app
      - ./node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true
    command: npm start
    networks:
      - messenger-network


  bot:
    container_name: bot
    build:
      context: Telegram_bot
      dockerfile: Dockerfile.bot
    networks:
      - messenger-network
    environment:
      - TOKEN=7537054107:AAHwkBopAiYR0fleIogFq57wC2_Se5CxX5s
      - BACKEND_URL=http://backend:8080

  messenger-db:
    container_name: messenger-db
    image: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=messenger_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - messenger-network

networks:
  messenger-network:
    name: messenger-network
    driver: bridge